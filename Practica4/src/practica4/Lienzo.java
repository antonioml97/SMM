/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica4;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

/**
 *
 * @author anton
 */
public class Lienzo extends javax.swing.JPanel {
     enum Forma{
        Punto,Linea, Rectangulo,Elipse;
    }
    //Punto donde se hace los clicks
    Point pInicial= new Point(-100,-100);
    Point pFinal= new Point(-100,-100);
            
    private Color color = Color.black;
    Forma forma=Forma.Punto;
   
    boolean relleno=false;
    
    public void setForma(Forma forma_nueva){
        forma=forma_nueva;
    }
    
    public void limpiar(){
        pInicial = pFinal = null;
        this.repaint();
    }
    
    public Color getColor(){
        return color;
    }

    public void setColor(Color color){
        this.color = color;
    }
    public void setRelleno(boolean estado){
        relleno=estado;
    }
    private void PintarPuntos(Graphics g){
       if(pInicial!=null)
           g.fillOval(pInicial.x,pInicial.y,20,20);
    }
    private void PintarLineas(Graphics g){
        if(pInicial!=null && pFinal!=null)
            g.drawLine(pInicial.x-5, pInicial.y-5, pFinal.x-5, pFinal.y-5);
    }
    private void PintarRectangulo(Graphics g){
        if(pInicial!=null && pFinal!=null){
            
            int ancho =  (pInicial.x - pFinal.x);
            int altura = (pInicial.y - pFinal.y);
   
            //Para saber si el rectangulo de arriba a abajo o de abajo a arriba
            int x = ancho < 0 ? pInicial.x :  pFinal.x;
            int y = altura < 0 ? pInicial.y :  pFinal.y;
            
            if(relleno)
                g.fillRect(x, y, Math.abs(ancho), Math.abs(altura));
            else
                g.drawRect(x, y, Math.abs(ancho), Math.abs(altura));

        }
    }
    private void PintarElipse(Graphics g){
        if(pInicial!=null && pFinal!=null){
            int ancho =  (pInicial.x - pFinal.x);
            int altura = (pInicial.y - pFinal.y);

            //Igual que en rectangulo
            int x = ancho < 0 ? pInicial.x :  pFinal.x;
            int y = altura < 0 ? pInicial.y :  pFinal.y;

            if(relleno)
                g.fillOval(x, y, Math.abs(ancho), Math.abs(altura));
            else
                g.drawOval(x, y, Math.abs(ancho), Math.abs(altura));
        }
    }
    
   
    
    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
    }
    @Override
    public void paint(Graphics g){
      super.paint(g);
      g.setColor(color);
      switch (forma){
        case Punto:
            PintarPuntos(g);
        break;
        case Linea:
            PintarLineas(g);
        break;
        case Rectangulo:
            PintarRectangulo(g);
        break;
        case Elipse:
            PintarElipse(g);
        break;
      }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        switch (forma){
            case Punto:
                pInicial = evt.getPoint();
                this.repaint();
            break; 
        }
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
       switch (forma){
            case Linea:
                 pFinal = evt.getPoint();
                this.repaint();
            break; 
            case Rectangulo:
               pFinal = evt.getPoint();
               this.repaint();
            break; 
            case Elipse:
               pFinal = evt.getPoint();
               this.repaint();
            break; 
            
        }
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
         switch(forma){
            case Linea:
                pInicial = evt.getPoint();
                break; 
            case Rectangulo:
                pInicial = evt.getPoint();
                break;        
            case Elipse:
                pInicial = evt.getPoint();
                break; 
                
        }
    }            
    }//GEN-LAST:event_formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

